global:
  autoInstrumentation:
    enabled: true
    config:
      apiVersion: opentelemetry.io/v1alpha1
      kind: Instrumentation
      metadata:
        name: opentelemetry-autoinstrumentation-webstore-demo
        namespace: webstore-demo
      spec:
        # https://github.com/open-telemetry/opentelemetry-operator/blob/main/docs/api.md#instrumentationspecresource
        resource:
          addK8sUIDAttributes: true
        env:
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317
        sampler:
          # Enum: always_on, always_off, traceidratio, parentbased_always_on, parentbased_always_off, parentbased_traceidratio, jaeger_remote, xray
          type: always_on
        java:
          image: ghcr.m.daocloud.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java:1.17.0
          env:
            - name: OTEL_JAVAAGENT_DEBUG
              value: "false"
            - name: OTEL_INSTRUMENTATION_JDBC_ENABLED
              value: "true"
            - name: SPLUNK_PROFILER_ENABLED
              value: "false"
        nodejs:
          image: ghcr.m.daocloud.io/open-telemetry/opentelemetry-operator/autoinstrumentation-nodejs:0.31.0
        python:
          image: ghcr.m.daocloud.io/open-telemetry/opentelemetry-operator/autoinstrumentation-python::0.33b0

opentelemetry-demo:
  enabled: true
  observability:
    otelcol:
      enabled: false
    jaeger:
      enabled: false

  default:
    image:
      repository: docker.m.daocloud.io/otel/demo

  components:
    redis:
      enabled: true
      useDefault:
        env: false

      # Options to override the default image settings.
      imageOverride:
        repository: "docker.m.daocloud.io/redis"
        tag: "alpine"

    adService:
      enabled: true
      useDefault:
        env: false
      imageOverride:
        repository: ghcr.m.daocloud.io/openinsight-proj/opentelemetry-demo-helm-chart/adservice
        tag: "v0.2.0"
      servicePort: 9555
      ports:
        - name: http
          value: 8081
        - name: health-http
          value: 8999
      env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: AD_SERVICE_PORT
          value: '9555'
        - name: NACSO_NAMESPACE_ID
          value: ''
        - name: NACSO_GROUP_NAME
          value: DEFAULT_GROUP
        - name: SKOALA_REGISTRY
          value: nacos-test
        - name: K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: >-
            k8s.namespace.name=$(K8S_NAMESPACE),k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.pod.uid=$(OTEL_RESOURCE_ATTRIBUTES_POD_UID),skoala.registry=$(SKOALA_REGISTRY),nacos.namespaceid=$(NACSO_NAMESPACE_ID),nacos.groupname=$(NACSO_GROUP_NAME)
        - name: JAVA_OPTS
          value: -Dspring.cloud.nacos.config.server-addr=nacos-test.skoala-jia:8848 -Dspring.application.name=adservice-springcloud -Dspring.cloud.nacos.discovery.enabled=true -Dspring.cloud.nacos.discovery.server-addr=nacos-test.skoala-jia:8848 -Dspring.cloud.nacos.config.discovery.metadata.k8s_cluster_id=xxx -Dspring.cloud.nacos.config.discovery.metadata.k8s_cluster_name=skoala-dev -Dspring.cloud.nacos.config.discovery.metadata.k8s_namespace_name=skoala-jia -Dspring.cloud.nacos.config.discovery.metadata.k8s_workload_type=deployment -Dspring.cloud.nacos.config.discovery.metadata.k8s_workload_name=adservice-springcloud -Dspring.cloud.nacos.config.discovery.metadata.k8s_service_name=adservice-springcloud -Dspring.cloud.nacos.config.discovery.metadata.k8s_pod_name=$(HOSTNAME) -Dspring.cloud.sentinel.enabled=true -Dspring.cloud.sentinel.transport.dashboard=nacos-test-sentinel:8080
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    cartService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: ASPNETCORE_URLS
          value: http://*:8080
        - name: REDIS_ADDR
          value: '{{ include "otel-demo.name" . }}-redis:6379'
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: CART_SERVICE_PORT
          value: "8080"
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    checkoutService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: CART_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-cartservice:8080'
        - name: CURRENCY_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-currencyservice:8080'
        - name: PAYMENT_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-paymentservice:8080'
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
        - name: SHIPPING_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-shippingservice:8080'
        - name: EMAIL_SERVICE_ADDR
          value: 'http://{{ include "otel-demo.name" . }}-emailservice:8080'
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: CHECKOUT_SERVICE_PORT
          value: "8080"
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    currencyService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: PORT
          value: "8080"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: CURRENCY_SERVICE_PORT
          value: "8080"
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    emailService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: APP_ENV
          value: production
        - name: PORT
          value: "8080"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4318/v1/traces'
        - name: EMAIL_SERVICE_PORT
          value: "8080"
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    featureflagService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: FEATURE_FLAG_GRPC_SERVICE_PORT
          value: "50053"
        - name: FEATURE_FLAG_SERVICE_PORT
          value: "8081"
        - name: OTEL_EXPORTER_OTLP_TRACES_PROTOCOL
          value: grpc
        - name: DATABASE_URL
          value: 'ecto://ffs:ffs@{{ include "otel-demo.name" . }}-ffspostgres:5432/ffs'
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    ffsPostgres:
      enabled: true
      useDefault:
        env: false
      imageOverride:
        repository: "docker.m.daocloud.io/postgres"
      env:
        - name: POSTGRES_DB
          value: ffs
        - name: POSTGRES_PASSWORD
          value: ffs
        - name: POSTGRES_USER
          value: ffs
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    frontend:
      enabled: true
      useDefault:
        env: false
      env:
        - name: FRONTEND_ADDR
          value: :8080
        - name: AD_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-adservice:8080'
        - name: CART_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-cartservice:8080'
        - name: CHECKOUT_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-checkoutservice:8080'
        - name: CURRENCY_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-currencyservice:8080'
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
        - name: RECOMMENDATION_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-recommendationservice:8080'
        - name: SHIPPING_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-shippingservice:8080'
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: FRONTEND_PORT
          value: "8080"
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    loadgenerator:
      enabled: true
      useDefault:
        env: false
      env:
        - name: FRONTEND_ADDR
          value: '{{ include "otel-demo.name" . }}-frontend:8080'
        - name: LOCUST_WEB_PORT
          value: "8089"
        - name: LOCUST_USERS
          value: "10"
        - name: LOCUST_HOST
          value: "http://$(FRONTEND_ADDR)"
        - name: LOCUST_HEADLESS
          value: "false"
        - name: LOCUST_AUTOSTART
          value: "true"
        - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
          value: python
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: LOADGENERATOR_PORT
          value: "8089"
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    paymentService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: PAYMENT_SERVICE_PORT
          value: "8080"
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    productCatalogService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: PRODUCT_CATALOG_SERVICE_PORT
          value: "8080"
        - name: FEATURE_FLAG_GRPC_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-featureflagservice:50053'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    recommendationService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: OTEL_PYTHON_LOG_CORRELATION
          value: "true"
        - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
          value: python
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: FEATURE_FLAG_GRPC_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-featureflagservice:50053'
        - name: RECOMMENDATION_SERVICE_PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: '{{ include "otel-demo.name" . }}-productcatalogservice:8080'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'

    shippingService:
      enabled: true
      useDefault:
        env: false
      env:
        - name: PORT
          value: "8080"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          value: 'http://insight-agent-opentelemetry-collector.insight-system.svc.cluster.local:4317'
        - name: SHIPPING_SERVICE_PORT
          value: "8080"
        - name: QUOTE_SERVICE_ADDR
          value: 'http://{{ include "otel-demo.name" . }}-quoteservice:8080'
      podAnnotations:
        instrumentation.opentelemetry.io/inject-sdk: 'true'